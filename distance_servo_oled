/*
 *requires libraries listed in this video.
 *https://www.youtube.com/watch?v=A9EwJ7M7OsI
 */

#include <Servo.h>
#include <Wire.h>
const int knob = A0;

//const int scl = scl;
//const int sda = sda;


const int trigPin = 8;
const int echoPin = 9;
int pos = 0;

float duration, distance;
int potval;

Servo servo;

void setup() {
  // ultrisonic sensor
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
//  pinMode(servo, INPUT);
  pinMode(knob, INPUT);
  // servo
  servo.attach(10);
  
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW); 
  Serial.begin(9600);
}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  duration = pulseIn(echoPin, HIGH);
  distance = (duration*.0343)/2;

  if(distance < 25){
    Serial.print("too close!!!");
    digitalWrite(LED_BUILTIN, HIGH);
    sweep();
    }else{
    digitalWrite(LED_BUILTIN, LOW);   
      }
  Serial.print("Distance: ");
  Serial.println(distance);


  
  delay(100);
  potval = analogRead(knob);            // reads the value of the potentiometer (value between 0 and 1023)
  potval = map(potval, 0, 1023, 0, 180);     // scale it to use it with the servo (value between 0 and 180)
  servo.write(potval);                  // sets the servo position according to the scaled value
  delay(15);  
}

void sweep(){
  for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    servo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    servo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  }
